// Code generated by running "go generate" in github.com/exp625/gones. DO NOT EDIT.

package apu

type PulseChannelSweepRegister uint8

func (P *PulseChannelSweepRegister) Enable() bool {
	const bit = 1 << 7
	return *P&bit == bit
}

func (P *PulseChannelSweepRegister) SetEnable(value bool) {
	const bit = uint8(1) << 7
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*P = PulseChannelSweepRegister((uint8(*P) & ^bit) | valueInt<<7)
}

func (P *PulseChannelSweepRegister) Period() uint8 {
	return uint8((*P >> 4) & 0x7)
}

func (P *PulseChannelSweepRegister) SetPeriod(value uint8) {
	const mask = uint8(((1 << 3) - 1) << 4)
	*P = PulseChannelSweepRegister((uint8(*P) & ^mask) | uint8(value)<<4)
}

func (P *PulseChannelSweepRegister) Negate() bool {
	const bit = 1 << 3
	return *P&bit == bit
}

func (P *PulseChannelSweepRegister) SetNegate(value bool) {
	const bit = uint8(1) << 3
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*P = PulseChannelSweepRegister((uint8(*P) & ^bit) | valueInt<<3)
}

func (P *PulseChannelSweepRegister) ShiftCount() uint8 {
	return uint8((*P >> 0) & 0x7)
}

func (P *PulseChannelSweepRegister) SetShiftCount(value uint8) {
	const mask = uint8(((1 << 3) - 1) << 0)
	*P = PulseChannelSweepRegister((uint8(*P) & ^mask) | uint8(value)<<0)
}
