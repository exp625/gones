// Code generated by running "go generate" in github.com/exp625/gones. DO NOT EDIT.

package ppu

type MaskRegister uint8

func (M *MaskRegister) Emphasize() uint8 {
	return uint8((*M >> 5) & 0x7)
}

func (M *MaskRegister) SetEmphasize(value uint8) {
	const mask = uint8(((1 << 3) - 1) << 5)
	*M = MaskRegister((uint8(*M) & ^mask) | uint8(value)<<5)
}

func (M *MaskRegister) ShowSprites() bool {
	const bit = 1 << 4
	return *M&bit == bit
}

func (M *MaskRegister) SetShowSprites(value bool) {
	const bit = uint8(1) << 4
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*M = MaskRegister((uint8(*M) & ^bit) | valueInt<<4)
}

func (M *MaskRegister) ShowBackground() bool {
	const bit = 1 << 3
	return *M&bit == bit
}

func (M *MaskRegister) SetShowBackground(value bool) {
	const bit = uint8(1) << 3
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*M = MaskRegister((uint8(*M) & ^bit) | valueInt<<3)
}

func (M *MaskRegister) SpritesLeftmost() bool {
	const bit = 1 << 2
	return *M&bit == bit
}

func (M *MaskRegister) SetSpritesLeftmost(value bool) {
	const bit = uint8(1) << 2
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*M = MaskRegister((uint8(*M) & ^bit) | valueInt<<2)
}

func (M *MaskRegister) BackgroundLeftmost() bool {
	const bit = 1 << 1
	return *M&bit == bit
}

func (M *MaskRegister) SetBackgroundLeftmost(value bool) {
	const bit = uint8(1) << 1
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*M = MaskRegister((uint8(*M) & ^bit) | valueInt<<1)
}

func (M *MaskRegister) Greyscale() bool {
	const bit = 1 << 0
	return *M&bit == bit
}

func (M *MaskRegister) SetGreyscale(value bool) {
	const bit = uint8(1) << 0
	valueInt := uint8(0)
	if value {
		valueInt = 1
	}

	*M = MaskRegister((uint8(*M) & ^bit) | valueInt<<0)
}
