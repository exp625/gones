MEMORY {

    # Define ZeroPage 0x0000 - 0x00FF
    ZP: start = $0000, size = $100;

    # Stack
    STACK: start = $0100, size = $100;

    # RAM
	RAM: start = $0200, size = $0600;

	#INES Header:
    HEADER: start = $0, size = $10, file = %O ,fill = yes;

    #ROM Addresses:
     PRG: start = $8000, size = $8000, file = %O ,fill = yes, define = yes;

    #1 Bank of 8K CHR ROM
    CHR: start = $0000, size = $2000, file = %O, fill = yes;
}

SEGMENTS {
    HEADER:   load = HEADER,         type = ro;
    STARTUP:  load = PRG,            type = ro,  define = yes;
    ZEROPAGE: load = ZP,             type = zp,  define = yes;
    CODE:     load = PRG,            type = ro,  define = yes;
    DATA:     load = PRG             type = ro,  define = yes;
    BSS:      load = RAM,            type = bss, define = yes;
    CHARS:    load = CHR,            type = ro;
	VECTORS:  load = PRG, start = $fffa, type = ro;
}


SYMBOLS {
	NES_MAPPER:	  type = weak, value = 0; 			# mapper number, 0 = NROM
	NES_PRG_BANKS:	 type = weak,  value = 2; 			# number of 16K PRG banks, change to 2 for NROM256
	NES_CHR_BANKS:	  type = weak, value = 1; 			# number of 8K CHR banks
	NES_MIRRORING:	  type = weak, value = 1; 			# 0 horizontal, 1 vertical, 8 four screen
}